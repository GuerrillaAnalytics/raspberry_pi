---


- name: Raspberry PI setup

  # hosts group in the inventory file
  # that this playbook is applied to
  hosts: raspberry_pis

  any_errors_fatal: true

  vars:
    # ansible vault encrypt_string of media centre IP address
    media_centre_ip_address: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          64373130343663396233633866393166313030393430353537333262393137653061623262343663
          3938323763356339626165356332643738323065353138640a653036386265633336386334303334
          37313832663835666161326432643265356633303431623538303036323338636533653331623861
          6130393333356262310a346535613438633662376235313535333339343931343038663961313535
          6636

  # gather variables about the hosts
  gather_facts: yes

  tasks:
  - name: ensure snap is installed
    become: yes
    apt:
      name: snapd
      state: latest
    when: ansible_os_family == 'Debian'
    tags: snap

  - name: Upgrade apt cache
    become: yes
    apt:
      upgrade: yes
      cache_valid_time: 604800 #update cache if been more than one day in secs
    when: ansible_os_family == 'Debian'
    tags: upgrade

  - name: Install xclip command line utility
    become: yes
    apt:
      name: xclip
      state: present
    tags: cli

  - name: install rclone
    become: yes
    apt:
      name: rclone
      state: latest
    when: ansible_os_family == 'Debian'
    tags: rclone

  # https://pimylifeup.com/raspberry-pi-screen-sharing/
  - name: install vino remote desktop viewer
    become: yes
    apt:
      name: vino
      state: latest
    when: ansible_os_family == 'Debian'
    tags: vino

  - name: Install vnc server
    become: yes
    apt:
      update_cache: yes
      name: "{{ item }}"
      state: present
    with_items:
      - realvnc-vnc-server
      - realvnc-vnc-viewer
    tags:
      - vnc


  # iterate through multiple installations
  # in one task
  - name: Install Linux command line utilites
    become: yes
    apt:
      name: ["{{ item }}"]
      state: present
    with_items:
      - acl
      - ntp
      - curl
      - gawk
      - grep
      - git
      - unzip
      - htop
      - tmux
      - tree
      - mc
      - bash-completion
      - sed
      - htop
      - rename
      - net-tools
      - watch
      - wget
      - whois

  - name: Create directory for mounting NAS
    become: yes
    file:
      path: /mnt/media-share
      state: directory
    tags: media

  # Mount the media centre NAS drive so it can be accessed
  # by Kodi
  - name: Mount media share NAS
    become: yes
    ansible.posix.mount:
      path: /mnt/media-share
      src: "{{ media_centre_ip_address }}:/nfs/media-share"
      fstype: nfs
      backup: yes
      state: mounted
    tags: media

  - name: install Kodi
    become: yes
    apt:
      name: kodi
      state: latest
    when: ansible_os_family == 'Debian'
    tags: kodi

  roles:
    - role: diodonfrost.java
      become: yes
      vars:
        java_version: latest
        openjre_install: true
        openjdk_install: false
      tags: java
